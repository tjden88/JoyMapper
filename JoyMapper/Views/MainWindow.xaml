<Window x:Class="JoyMapper.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:models="clr-namespace:JoyMapper.Models"
        xmlns:controls="clr-namespace:WPR.Controls;assembly=WPR"
        mc:Ignorable="d"
        Topmost="False"
        DataContext="{Binding ViewModel, RelativeSource={RelativeSource Self}}"
        Name="Window"
        Style="{StaticResource ChromeWindow}"
        Title="{Binding Title}" Height="600" Width="800">
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:EventTrigger.Actions>
                <b:InvokeCommandAction Command="{Binding LoadDataCommand}"/>
                <b:InvokeCommandAction Command="{Binding CheckUpdatesCommand}"/>
            </b:EventTrigger.Actions>
        </b:EventTrigger>
    </b:Interaction.Triggers>
    <Grid>
        <TabControl TabStripPlacement="Left" Margin="5" HorizontalContentAlignment="Left">
            <TabItem>
                <TabItem.Header>
                    <controls:WPRIconText Text="Профили" IconSource="Gauge" Foreground="{DynamicResource PrimaryColorBrush}"/>
                </TabItem.Header>

                <!--Профили-->
                <controls:WPRCard>
                    <DockPanel>
                        <ToolBar DockPanel.Dock="Top" Margin="5">
                            <Button Command="{Binding CreateProfileCommand}"
                                    ToolTip="{Binding CreateProfileCommand}">
                                <Button.Content>
                                    <controls:WPRIconText Text="Новый профиль" IconSource="Add"  FontWeight="Bold"/>
                                </Button.Content>
                            </Button>
                            <Button Command="{Binding CopyProfileCommand}"
                                    ToolTip="{Binding CopyProfileCommand}">
                                <Button.Content>
                                    <controls:WPRIcon Source="ContentCopy"/>
                                </Button.Content>
                            </Button>
                            <Button Command="{Binding EditProfileCommand}"
                                    ToolTip="{Binding EditProfileCommand}">
                                <Button.Content>
                                    <controls:WPRIcon Source="EditOutline"/>
                                </Button.Content>
                            </Button>
                            <Button Command="{Binding DeleteProfileCommand}"
                                    ToolTip="{Binding DeleteProfileCommand}">
                                <Button.Content>
                                    <controls:WPRIcon Source="DeleteOutline" Foreground="{DynamicResource AttentionColorBrush}"/>
                                </Button.Content>
                            </Button>
                        </ToolBar>

                        <TextBlock Text="Список профилей" DockPanel.Dock="Top" Margin="10,10,5,-5" FontSize="20"
                                   Foreground="{DynamicResource SecondaryTextColorBrush}" />
                        <ListBox Margin="5" ItemsSource="{Binding Profiles}" HorizontalContentAlignment="Stretch" SelectedItem="{Binding SelectedProfile}">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type models:Profile}">
                                    <DockPanel LastChildFill="False" Margin="10,5" >
                                        <StackPanel VerticalAlignment="Center">
                                            <TextBlock Text="{Binding Name}"  FontWeight="Bold" FontSize="18"/>
                                            <TextBlock Text="{Binding Description}" Foreground="{DynamicResource SecondaryTextColorBrush}"/>
                                        </StackPanel>
                                        <Button DockPanel.Dock="Right" Padding="30,10" Content="Запуск" FontSize="20"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType=Window} , Path=DataContext.StartProfileCommand}"
                                                    CommandParameter="{Binding}"/>
                                    </DockPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </controls:WPRCard>
            </TabItem>

            <TabItem>
                <TabItem.Header>
                    <controls:WPRIconText Text="Паттерны" IconSource="GamepadVariantOutline" Foreground="{DynamicResource PrimaryColorBrush}"/>
                </TabItem.Header>

                <!--Паттерны-->
                <controls:WPRCard>
                    <DockPanel>
                        <DockPanel.Resources>
                            <CollectionViewSource x:Key="PatternsItems" Source="{Binding Path=JoyPatterns}">
                                <CollectionViewSource.GroupDescriptions>
                                    <PropertyGroupDescription PropertyName="GroupName" />
                                </CollectionViewSource.GroupDescriptions>
                            </CollectionViewSource>
                        </DockPanel.Resources>

                        <ToolBar DockPanel.Dock="Top" Margin="5">
                            <Button Command="{Binding CreatePatternCommand}"
                                    ToolTip="{Binding CreatePatternCommand}">
                                <Button.Content>
                                    <controls:WPRIconText Text="Новый паттерн" IconSource="Add"  FontWeight="Bold"/>
                                </Button.Content>
                            </Button>
                            <Button Command="{Binding CopyPatternCommand}"
                                    ToolTip="{Binding CopyPatternCommand}">
                                <Button.Content>
                                    <controls:WPRIcon Source="ContentCopy"/>
                                </Button.Content>
                            </Button>
                            <Button Command="{Binding EditPatternCommand}"
                                    ToolTip="{Binding EditPatternCommand}">
                                <Button.Content>
                                    <controls:WPRIcon Source="EditOutline"/>
                                </Button.Content>
                            </Button>
                            <Button Command="{Binding EditPatternCommand}"
                                    ToolTip="{Binding EditPatternCommand}">
                                <Button.Content>
                                    <controls:WPRIcon Source="GaugeFull"/>
                                </Button.Content>
                            </Button>
                            <Button Command="{Binding DeletePatternCommand}"
                                    ToolTip="{Binding DeletePatternCommand}">
                                <Button.Content>
                                    <controls:WPRIcon Source="DeleteOutline" Foreground="{DynamicResource AttentionColorBrush}"/>
                                </Button.Content>
                            </Button>
                        </ToolBar>

                        <TextBlock Text="Список паттернов" DockPanel.Dock="Top" Margin="10,10,5,-5" FontSize="20"
                                   Foreground="{DynamicResource SecondaryTextColorBrush}" />

                        <ListBox Margin="5" ItemsSource="{Binding Source={StaticResource PatternsItems} }" SelectedItem="{Binding SelectedPattern}">

                            <ListBox.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.Panel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel Orientation="Vertical" />
                                        </ItemsPanelTemplate>
                                    </GroupStyle.Panel>
                                    <GroupStyle.ContainerStyle>
                                        <Style TargetType="{x:Type GroupItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Expander
                                                            IsExpanded="True">
                                                            <Expander.Header>
                                                                <TextBlock FontSize="16" Foreground="{DynamicResource PrimaryColorBrush}" Text="{Binding Name, TargetNullValue=Нет группы}" />
                                                            </Expander.Header>
                                                            <ItemsPresenter/>
                                                        </Expander>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </GroupStyle.ContainerStyle>
                                </GroupStyle>
                            </ListBox.GroupStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type models:JoyPattern}">
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Text="{Binding Name}" FontWeight="Bold" FontSize="16" Margin="5,5,0,0"/>
                                        <DockPanel>
                                            <TextBlock Margin="5" Text="{Binding Binding}"/>
                                            <controls:WPRIcon Foreground="{DynamicResource AccentColorBrush}" Source="AxisArrow" Margin="5"
                                                              Visibility="{Binding HasModificator, Converter={StaticResource Bool2VisibilityConverter}}"/>
                                        </DockPanel>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </controls:WPRCard>
            </TabItem>


            <TabItem>
                <TabItem.Header>
                    <controls:WPRIconText Text="Модификаторы" IconSource="AxisArrow" Foreground="{DynamicResource PrimaryColorBrush}"/>
                </TabItem.Header>

                <!--Модификаторы-->
                <controls:WPRCard>
                    <DockPanel>
                        <ToolBar DockPanel.Dock="Top" Margin="5">
                            <Button Command="{Binding CreateModificatorCommand}"
                                    ToolTip="{Binding CreateModificatorCommand}">
                                <Button.Content>
                                    <controls:WPRIconText Text="Добавить модификатор" IconSource="Add"  FontWeight="Bold"/>
                                </Button.Content>
                            </Button>

                            <Button Command="{Binding EditModificatorCommand}"
                                    ToolTip="{Binding EditModificatorCommand}">
                                <Button.Content>
                                    <controls:WPRIcon Source="EditOutline"/>
                                </Button.Content>
                            </Button>
                            <Button Command="{Binding DeleteModificatorCommand}"
                                    ToolTip="{Binding DeleteModificatorCommand}">
                                <Button.Content>
                                    <controls:WPRIcon Source="DeleteOutline" Foreground="{DynamicResource AttentionColorBrush}"/>
                                </Button.Content>
                            </Button>
                        </ToolBar>

                        <DockPanel DockPanel.Dock="Top">
                            <controls:WPRIcon Source="InfoCircleOutline" VerticalAlignment="Top" Margin="10,0,5,0" Foreground="{DynamicResource AccentColorBrush}"/>
                            <TextBlock TextWrapping="WrapWithOverflow" Foreground="{DynamicResource SecondaryTextColorBrush}">
                                <TextBlock.Text>
                                    Модификаторы предназначены для назначения дополнительных условий выполнения паттернов.
                                    Например, можно назначить несколько разных паттернов действий для одной кнопки джойстика внутри профиля (с использованием модификатора или без).
                                </TextBlock.Text>
                            </TextBlock>
                        </DockPanel>

                        <TextBlock Text="Список модификаторов" DockPanel.Dock="Top" Margin="10,10,5,-5" FontSize="20"
                                   Foreground="{DynamicResource SecondaryTextColorBrush}" />

                        <ListBox Margin="5" ItemsSource="{Binding Modificators}" SelectedItem="{Binding SelectedModificator}">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type models:Modificator}">
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Text="{Binding Name}" FontWeight="Bold" FontSize="16" Margin="5,5,0,0"/>
                                        <WrapPanel>
                                            <TextBlock Margin="5" Text="{Binding Binding}"/>
                                        </WrapPanel>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </controls:WPRCard>

            </TabItem>

            <TabItem>
                <TabItem.Header>
                    <controls:WPRIconText Text="Настройки" IconSource="Settings" Foreground="{DynamicResource PrimaryColorBrush}"/>
                </TabItem.Header>

                <!--Настройки-->
                <controls:WPRCard>
                    <StackPanel Orientation="Vertical" Margin="10">
                        <TextBlock Text="Настройки программы" DockPanel.Dock="Top" FontSize="20" Margin="0,10"
                                   Foreground="{DynamicResource SecondaryTextColorBrush}" />

                        <DockPanel LastChildFill="False">
                            <TextBlock Text="Максимальная задержка двойного нажатия кнопки (мс)" VerticalAlignment="Center"/>
                            <controls:NumericTextBox Width="80" MinValue="200" MaxValue="1000" Margin="10,0" Value="{Binding DoublePressDelay}"/>
                        </DockPanel>
                        <DockPanel LastChildFill="False">
                            <TextBlock Text="Задержка долгого нажатия кнопки (мс)" VerticalAlignment="Center"/>
                            <controls:NumericTextBox Width="80" MinValue="200" MaxValue="1500" Margin="10,0" Value="{Binding LongPressDelay}"/>
                        </DockPanel>

                        <Separator Background="{DynamicResource DividerColorBrush}"/>

                        <DockPanel LastChildFill="False">
                            <TextBlock Text="Внешний вид (цветовая схема)" VerticalAlignment="Center"/>
                            <ComboBox Width="120" Margin="10,20" 
                                      ItemsSource="{Binding ColorThemes}" 
                                      SelectedItem="{Binding CurrentColorTheme}"
                                      HorizontalContentAlignment="Stretch"
                                      VerticalContentAlignment="Center"
                                      IsSynchronizedWithCurrentItem="True">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type models:ColorTheme}">
                                        <Border CornerRadius="8" BorderThickness="0" Height="40" Margin="0,0,0,8">
                                            <Border.Background>
                                                <SolidColorBrush Color="{Binding PrimaryColor}"/>
                                            </Border.Background>
                                            <controls:WPRIcon Source="StarBorder" IconSize="26">
                                                <controls:WPRIcon.Foreground>
                                                    <SolidColorBrush Color="{Binding AccentColor}"/>
                                                </controls:WPRIcon.Foreground>
                                            </controls:WPRIcon>
                                        </Border>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </DockPanel>

                        <Separator Background="{DynamicResource DividerColorBrush}"/>

                        <TextBlock Text="О программе" DockPanel.Dock="Top" FontSize="20" Margin="0,10"
                                   Foreground="{DynamicResource SecondaryTextColorBrush}" />

                        <WrapPanel>
                            <TextBlock Text="{Binding AppVersion, StringFormat='Версия: {0}'}" Foreground="{DynamicResource PrimaryColorBrush}" Margin="0,10"/>
                            <Button Style="{StaticResource AccentWPRButton}" Content="Доступно обновление" Command="{Binding ShowUpdateWindowCommand}"
                                    Visibility="{Binding ShowUpdateWindowCommand.Visibility}" Margin="10,5" />
                        </WrapPanel>

                        <Button Style="{StaticResource WPRFlatButton}" Margin="-5,10" Padding="5" HorizontalAlignment="Left"
                                Command="{Binding GoToHomepageCommand}">
                            <Button.Content>
                                <controls:WPRIconText Text="Страница проекта" IconSource="Github" />
                            </Button.Content>
                        </Button>
                        <Button Style="{StaticResource WPRFlatButton}" Margin="-5,10" Padding="5" HorizontalAlignment="Left"
                                Command="{Binding ReportProblemCommand}">
                            <Button.Content>
                                <controls:WPRIconText Text="Сообщить о проблеме" IconSource="ReportProblem" />
                            </Button.Content>
                        </Button>
                        <Button Style="{StaticResource WPRFlatButton}" Margin="-5,10" Padding="5" HorizontalAlignment="Left"
                                Command="{Binding MakeDonateCommand}">
                            <Button.Content>
                                <controls:WPRIconText Text="Поддержать разработчика" IconSource="Donate" />
                            </Button.Content>
                        </Button>

                    </StackPanel>
                </controls:WPRCard>
            </TabItem>

        </TabControl>

        <!--Индикатор запущенного профиля-->
        <Border Background="{DynamicResource LightPrimaryColorBrush}"
                d:IsHidden="true"
                Visibility="{Binding IsProfileStarted, Converter={StaticResource Bool2VisibilityConverter}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="10" VerticalAlignment="Center" >
                    <TextBlock Margin="20" FontWeight="Bold" FontSize="22" Text="{Binding ActiveProfile.Name, StringFormat='Текущий профиль: {0}'}" TextWrapping="WrapWithOverflow"/>
                    <Button Padding="40, 10"
                            HorizontalAlignment="Center"
                            Command="{Binding StopProfileCommand}"
                            ToolTip="{Binding StopProfileCommand}">
                        <Button.Content>
                            <TextBlock Text="Остановить" FontSize="20"/>
                        </Button.Content>
                    </Button>
                </StackPanel>
                <ScrollViewer Margin="10" Grid.Row="1" Foreground="{DynamicResource DarkPrimaryColorBrush}">
                    <ItemsControl ItemsSource="{Binding LogMessages}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type models:LogMessage}">

                                <TextBlock Margin="5" TextAlignment="Center" Text="{Binding}" FontSize="16">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="{Binding Color}"/>
                                    </TextBlock.Foreground>
                                </TextBlock>

                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </Border>
    </Grid>
</Window>
